stages:
  # - build # Not used for python code
  - test
  - staging
  - deploy

# Check python syntax
code_quality:
  stage: test
  image: chrissayon/flask_ansible:0.2
  script:
    - cd backend
    - flake8 --max-line-length=90 --exclude ansible

# Unit testing
unit_testing:
  stage: test
  image: chrissayon/flask_ansible:0.2
  script:
    - python3 -m pytest backend/tests

# Deploy dev server
deploy_dev:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script: aws cloudformation deploy --stack-name dev --template cloudformation/dev.yml
  environment:
    name: development
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feature/'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success

# Configure dev server
configure_dev:
  stage: deploy
  image: geerlingguy/docker-ubuntu1804-ansible
  script:
    - cd ansible
    - ansible-playbook -i ec2.py main.yml
  environment:
    name: development
  when: on_success

# Deploy staging server
deploy_staging:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script: aws cloudformation deploy --stack-name staging --template cloudformation/stage.yml
  when: manual
  environment:
    name: staging
  only:
  - staging

# Deploy prod server
deploy_prod:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script: aws cloudformation deploy --stack-name prod --template cloudformation/prod.yml
  when: manual
  environment:
    name: production
  only:
  - master
